// Resource Manager
alias functionNum R1;
alias currentPID R2;

// function number 3 is for acquiring disk
if(functionNum == 3) then
	while([DISK_STATUS_TABLE + 0] == 1) do
		[PROCESS_TABLE + currentPID*16 + 4] = WAIT_DISK;
		multipush(R1,R2);
		
		// Calling scheduler
		call MOD_5;
		multipop(R1,R2);
	endwhile;
	[DISK_STATUS_TABLE + 0] = 1;
	[DISK_STATUS_TABLE + 4] = currentPID;
	return;
endif;

// Acquiring terminal
if(functionNum == 8) then
	
	while([TERMINAL_STATUS_TABLE + 0] == 1) do
		[PROCESS_TABLE + (currentPID*16) + 4] = WAIT_TERMINAL;
		multipush(R1,R2);
		
		// Calling scheduler
		call MOD_5;
		multipop(R1,R2);
	endwhile;
	[TERMINAL_STATUS_TABLE + 0] = 1;
	[TERMINAL_STATUS_TABLE + 1] = currentPID;
	breakpoint;
	return;
endif;

// Releasing terminal
if(functionNum == 9) then
	if(currentPID != [TERMINAL_STATUS_TABLE + 1]) then
		R0 = -1;
		return;
	else
		[TERMINAL_STATUS_TABLE + 0] = 0;
		alias counter R5;
		counter = 1;
		while(counter < 16) do
			if([PROCESS_TABLE + (counter*16) + 4] == WAIT_TERMINAL) then
				[PROCESS_TABLE + (counter*16) + 4] = READY;
			endif;
			counter = counter + 1;
		endwhile;
		R0 = 0;
		breakpoint;
		return;
	endif;
endif;
return;	
