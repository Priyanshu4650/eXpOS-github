// changing the mode to shutdown sys call
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 9] = 21;

// Seeting up the UPTR as SP
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 13] = SP;

alias userSP R0;
userSP = SP;

// kernel stack setting up
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 11]*512 - 1;

alias currentPID R1;
currentPID = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 1];

if((currentPID != 1) || ([PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 3] != 1))  then
	[[PAGE_TABLE_BASE + ([SYSTEM_STATUS_TABLE + 1]*20) + 2*((userSP-1)/512)]*512 + ((userSP-1)%512)] = -1;
	[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 9] = 0;
	SP = userSP;
	ireturn;
endif;

// Calling for disk store from the device manager
//INODE + USER TABLE
multipush(R0,R1);
R1 = 1;
R2 = currentPID;
R3 = 59; //page num
R4 = 3; // block num
call MOD_4;
multipop(R0,R1);

multipush(R0,R1);
R1 = 1;
R2 = currentPID;
R3 = 60;
R4 = 4;
call MOD_4;
multipop(R0,R1);

//ROOT FILE
multipush(R0,R1);
R1 = 1;
R2 = currentPID;
R3 = 62;
R4 = 5;
call MOD_4;
multipop(R0,R1);

//DISK FREE LIST
multipush(R0,R1);
R1 = 1;
R2 = currentPID;
R3 = 61;
R4 = 2;
call MOD_4;
multipop(R0,R1);

halt;
