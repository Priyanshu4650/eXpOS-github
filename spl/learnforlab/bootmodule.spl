// 3 Programs namely INIT, even numbers and prime numbers.

// Module 5 ( Scheduler )
loadi(63, 13);
loadi(64, 14);

loadi(65, 7);
loadi(66, 8);

loadi(22, 35);
loadi(23, 36);

loadi(2 ,15);
loadi(3, 16);

loadi(4, 17);
loadi(5, 18);

loadi(16, 29);
loadi(17, 30);

loadi(83, 69);
loadi(89, 70);

loadi(50, 63);
loadi(51, 64);

// For even numbers
PTBR = PAGE_TABLE_BASE + 20;
PTLR = 10;

// Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

// Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

// Code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

// Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";

// For prime numbers
PTBR = PAGE_TABLE_BASE + 40;
PTLR = 10;

// Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

// Heap
[PTBR+4] = 86;
[PTBR+5] = "0110";
[PTBR+6] = 87;
[PTBR+7] = "0110";

// Code
[PTBR+8] = 83;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

// Stack
[PTBR+16] = 84;
[PTBR+17] = "0110";
[PTBR+18] = 85;
[PTBR+19] = "0110";

PTBR = PAGE_TABLE_BASE + 60;
PTLR = 10;

[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

[PTBR+4] = 92;
[PTBR+5] = "0110";
[PTBR+6] = 93;
[PTBR+7] = "0110";

[PTBR+8] = 89;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

[PTBR+16] = 90;
[PTBR+17] = "0110";
[PTBR+18] = 91;
[PTBR+19] = "0110";

// INIT (odd numbers)
[PROCESS_TABLE + 27] = 80;
[PROCESS_TABLE + 17] = 1;
[PROCESS_TABLE + 20] = CREATED;
[PROCESS_TABLE + 29] = 8*512;
[PROCESS_TABLE + 28] = 0;
[PROCESS_TABLE + 30] = PAGE_TABLE_BASE+20;
[PROCESS_TABLE + 31] = 10;

// Even numbers
[PROCESS_TABLE + 43] = 88;
[PROCESS_TABLE + 33] = 2;
[PROCESS_TABLE + 36] = CREATED;
[PROCESS_TABLE + 45] = 8*512;
[PROCESS_TABLE + 44] = 0;
[PROCESS_TABLE + 46] = PAGE_TABLE_BASE+40;
[PROCESS_TABLE + 47] = 10;

// Prime numbers
[PROCESS_TABLE + 59] = 94;
[PROCESS_TABLE + 49] = 3;
[PROCESS_TABLE + 52] = CREATED;
[PROCESS_TABLE + 61] = 8*512;
[PROCESS_TABLE + 60] = 0;
[PROCESS_TABLE + 62] = PAGE_TABLE_BASE+60;
[PROCESS_TABLE + 63] = 10;


alias count R0;
count= 4;

while (count < 16) do
	[PROCESS_TABLE + (count*16) + 4] = TERMINATED;
	count = count + 1;
endwhile;

[90 * 512] = [89 * 512 + 1];
[84 * 512] = [83 * 512 + 1];
[76 * 512] = [65 * 512 + 1];

return;
